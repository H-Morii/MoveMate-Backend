// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int            @id @default(autoincrement())
  email               String
  passwordHash        String
  firstName           String?
  middleName          String?
  lastName            String?
  phoneNumber         String         @unique
  birthDate           DateTime?
  country             String?
  postalCodePart1     String?
  postalCodePart2     String?
  city                String?
  ward                String?
  address             String?
  apartment           String?
  driverLicenseNumber String?
  company             String?
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
  driverProfile       DriverProfile?
  role                UserRole       @default(USER)
  reviewsWritten      Review[]       @relation("reviewsWritten")
  reviewsReceived     Review[]       @relation("reviewsReceived")
}

model DriverProfile {
  id                  Int     @id @default(autoincrement())
  userId              Int     @unique
  vehicleType         String?
  vehicleLicensePlate String?
  insuranceDetails    String?
  user                User    @relation(fields: [userId], references: [id])
}

model Review {
  id        Int      @id @default(autoincrement())
  content   String
  rating    Int
  authorId  Int      @map("written_by")
  targetId  Int      @map("written_for")
  createdAt DateTime @default(now())

  author User @relation("reviewsWritten", fields: [authorId], references: [id])
  target User @relation("reviewsReceived", fields: [targetId], references: [id])
}

enum UserRole {
  USER
  DRIVER
}
